{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://project-session-manager/./node_modules/minimatch/minimatch.js","webpack://project-session-manager/./src/utils/gitignore-filter.ts","webpack://project-session-manager/./src/commands/index.ts","webpack://project-session-manager/./src/webview/webview-provider.ts","webpack://project-session-manager/./src/extension.ts","webpack://project-session-manager/external commonjs \"vscode\"","webpack://project-session-manager/./src/commands/contextManagement.ts","webpack://project-session-manager/./src/models/project-session.ts","webpack://project-session-manager/./node_modules/balanced-match/index.js","webpack://project-session-manager/./node_modules/brace-expansion/index.js","webpack://project-session-manager/./src/commands/tabManagement.ts","webpack://project-session-manager/./node_modules/concat-map/index.js","webpack://project-session-manager/./src/commands/getTerminalContent.ts","webpack://project-session-manager/external node-commonjs \"fs\"","webpack://project-session-manager/external node-commonjs \"path\"","webpack://project-session-manager/webpack/bootstrap","webpack://project-session-manager/webpack/startup"],"sourcesContent":["module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = (function () { try { return require('path') } catch (e) {}}()) || {\n  sep: '/'\n}\nminimatch.sep = path.sep\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  b = b || {}\n  var t = {}\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n  m.Minimatch.defaults = function defaults (options) {\n    return orig.defaults(ext(def, options)).Minimatch\n  }\n\n  m.filter = function filter (pattern, options) {\n    return orig.filter(pattern, ext(def, options))\n  }\n\n  m.defaults = function defaults (options) {\n    return orig.defaults(ext(def, options))\n  }\n\n  m.makeRe = function makeRe (pattern, options) {\n    return orig.makeRe(pattern, ext(def, options))\n  }\n\n  m.braceExpand = function braceExpand (pattern, options) {\n    return orig.braceExpand(pattern, ext(def, options))\n  }\n\n  m.match = function (list, pattern, options) {\n    return orig.match(list, pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  assertValidPattern(pattern)\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  assertValidPattern(pattern)\n\n  if (!options) options = {}\n\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (!options.allowWindowsEscape && path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n  this.partial = !!options.partial\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = function debug() { console.error.apply(console, arguments) }\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\nvar MAX_PATTERN_LENGTH = 1024 * 64\nvar assertValidPattern = function (pattern) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  assertValidPattern(pattern)\n\n  var options = this.options\n\n  // shortcuts\n  if (pattern === '**') {\n    if (!options.noglobstar)\n      return GLOBSTAR\n    else\n      pattern = '*'\n  }\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      /* istanbul ignore next */\n      case '/': {\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n      }\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        // split where the last [ was, make sure we don't have\n        // an invalid re. if so, re-walk the contents of the\n        // would-be class to re-translate any characters that\n        // were passed through as-is\n        // TODO: It would probably be faster to determine this\n        // without a try/catch and a new RegExp, but it's tricky\n        // to do safely.  For now, this is safe and works.\n        var cs = pattern.substring(classStart + 1, i)\n        try {\n          RegExp('[' + cs + ']')\n        } catch (er) {\n          // not a valid class!\n          var sp = this.parse(cs, SUBPARSE)\n          re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n          hasMagic = hasMagic || sp[1]\n          inClass = false\n          continue\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '[': case '.': case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) /* istanbul ignore next - should be impossible */ {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) /* istanbul ignore next - should be impossible */ {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = function match (f, partial) {\n  if (typeof partial === 'undefined') partial = this.partial\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    /* istanbul ignore if */\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      /* istanbul ignore if */\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      hit = f === p\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else /* istanbul ignore else */ if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    return (fi === fl - 1) && (file[fi] === '')\n  }\n\n  // should be unreachable.\n  /* istanbul ignore next */\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n","import * as path from 'path';\r\nimport * as fs from 'fs';\r\nimport * as vscode from 'vscode';\r\nimport minimatch = require('minimatch');\r\n\r\ninterface GitignorePattern {\r\n  basePath: string;\r\n  pattern: string;\r\n}\r\n\r\n/**\r\n * GitignoreFilter - Utility to parse and match paths against gitignore patterns\r\n */\r\nclass GitignoreFilter {\r\n  private patterns: GitignorePattern[];\r\n  private workspaceFolders: readonly vscode.WorkspaceFolder[];\r\n\r\n  constructor() {\r\n    this.patterns = [];\r\n    this.workspaceFolders = [];\r\n  }\r\n\r\n  /**\r\n   * Initialize the filter with workspace folders and load all .gitignore files\r\n   * @param workspaceFolders The VS Code workspace folders\r\n   */\r\n  async initialize(workspaceFolders: readonly vscode.WorkspaceFolder[]): Promise<void> {\r\n    this.workspaceFolders = workspaceFolders || [];\r\n    this.patterns = [];\r\n    \r\n    // Get additional exclude patterns from VS Code settings\r\n    const config = vscode.workspace.getConfiguration('projectSession.search');\r\n    const extraExcludePatterns = config.get<string[]>('excludePatterns') || [];\r\n    \r\n    // Add global exclude patterns\r\n    for (const pattern of extraExcludePatterns) {\r\n      this.patterns.push({\r\n        basePath: '', // Global pattern\r\n        pattern: pattern\r\n      });\r\n    }\r\n    \r\n    // Process each workspace folder\r\n    for (const folder of this.workspaceFolders) {\r\n      await this._loadGitignorePatterns(folder.uri.fsPath);\r\n    }\r\n\r\n    console.log(`Loaded ${this.patterns.length} gitignore patterns (including ${extraExcludePatterns.length} from settings)`);\r\n  }\r\n\r\n  /**\r\n   * Load gitignore patterns from a workspace folder\r\n   * @param folderPath Path to the workspace folder\r\n   */\r\n  private async _loadGitignorePatterns(folderPath: string): Promise<void> {\r\n    try {\r\n      const gitignorePath = path.join(folderPath, '.gitignore');\r\n      \r\n      // Check if .gitignore exists\r\n      let gitignoreExists = false;\r\n      try {\r\n        await fs.promises.access(gitignorePath, fs.constants.R_OK);\r\n        gitignoreExists = true;\r\n      } catch (err) {\r\n        // File doesn't exist or can't be read, which is fine\r\n        console.log(`No .gitignore found at ${gitignorePath}`);\r\n      }\r\n      \r\n      if (gitignoreExists) {\r\n        const content = await fs.promises.readFile(gitignorePath, 'utf8');\r\n        const lines = content.split(/\\r?\\n/);\r\n        \r\n        for (let line of lines) {\r\n          // Skip comments and empty lines\r\n          line = line.trim();\r\n          if (line && !line.startsWith('#')) {\r\n            console.log(`Adding gitignore pattern: '${line}' from ${folderPath}`);\r\n            // Store pattern with the folder path for context\r\n            this.patterns.push({\r\n              basePath: folderPath,\r\n              pattern: line\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error('Error loading gitignore patterns:', err);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if a file should be excluded based on gitignore patterns\r\n   * @param filePath The full path of the file to check\r\n   * @returns True if the file should be excluded\r\n   */\r\n  public shouldExclude(filePath: string): boolean {\r\n    // If no patterns, don't exclude anything\r\n    if (this.patterns.length === 0) {\r\n      return false;\r\n    }\r\n    \r\n    // Find the workspace folder this file belongs to\r\n    let workspaceFolder: string | null = null;\r\n    for (const folder of this.workspaceFolders) {\r\n      if (filePath.startsWith(folder.uri.fsPath)) {\r\n        workspaceFolder = folder.uri.fsPath;\r\n        break;\r\n      }\r\n    }\r\n    \r\n    if (!workspaceFolder) {\r\n      return false; // Not in any workspace folder\r\n    }\r\n    \r\n    // Get relative path to the workspace folder\r\n    const relativePath = path.relative(workspaceFolder, filePath).replace(/\\\\/g, '/');\r\n    \r\n    // Direct check for simple directory patterns from gitignore\r\n    for (const { pattern } of this.patterns) {\r\n      // Check for simple directory patterns like \"resources/\"\r\n      if (pattern.endsWith('/')) {\r\n        const dirPath = pattern.slice(0, -1);\r\n        // Check if the relative path starts with this directory or contains it with slashes\r\n        if (relativePath === dirPath || \r\n            relativePath.startsWith(`${dirPath}/`) || \r\n            relativePath.includes(`/${dirPath}/`)) {\r\n          console.log(`File ${relativePath} excluded by directory pattern: ${pattern}`);\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Check each pattern for more complex matching\r\n    for (const { basePath, pattern } of this.patterns) {\r\n      // For global patterns (from settings) or patterns from the file's workspace\r\n      if (basePath === '' || filePath.startsWith(basePath)) {\r\n        // Handle patterns with and without slashes\r\n        let patternToCheck = pattern;\r\n        \r\n        // Handle negation patterns (those starting with !)\r\n        let isNegated = false;\r\n        if (pattern.startsWith('!')) {\r\n          isNegated = true;\r\n          patternToCheck = pattern.slice(1);\r\n        }\r\n        \r\n        // Handle directory patterns (those ending with /)\r\n        let isDirectoryPattern = false;\r\n        if (patternToCheck.endsWith('/')) {\r\n          isDirectoryPattern = true;\r\n          patternToCheck = patternToCheck.slice(0, -1);\r\n        }\r\n        \r\n        // Check if this is just a simple \"node_modules\" style pattern\r\n        if (!patternToCheck.includes('/')) {\r\n          patternToCheck = `**/${patternToCheck}`;\r\n          if (isDirectoryPattern) {\r\n            patternToCheck += '/**';\r\n          }\r\n        } else if (patternToCheck.startsWith('/')) {\r\n          // Handle patterns that start with / (relative to repo root)\r\n          patternToCheck = patternToCheck.slice(1);\r\n        }\r\n        \r\n        try {\r\n          // Use minimatch to check pattern\r\n          const matches = minimatch(relativePath, patternToCheck, { dot: true });\r\n          \r\n          if (matches && !isNegated) {\r\n            console.log(`File ${relativePath} excluded by pattern: ${patternToCheck}`);\r\n            return true; // File matches exclusion pattern\r\n          } else if (matches && isNegated) {\r\n            return false; // File matches negation pattern, explicitly included\r\n          }\r\n        } catch (error) {\r\n          console.error(`Error matching pattern ${patternToCheck}:`, error);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Filter an array of file URIs to exclude gitignored files\r\n   * @param uris Array of file URIs\r\n   * @returns Filtered array\r\n   */\r\n  public filterUris(uris: vscode.Uri[]): vscode.Uri[] {\r\n    if (!uris || !uris.length) return [];\r\n    \r\n    return uris.filter(uri => !this.shouldExclude(uri.fsPath));\r\n  }\r\n\r\n  /**\r\n   * Simple check if a path contains a gitignored directory\r\n   * @param filePath File path to check\r\n   * @returns True if path contains a gitignored segment\r\n   */\r\n  public containsGitIgnoredSegment(filePath: string): boolean {\r\n    // Get common ignored directories from settings if available\r\n    const config = vscode.workspace.getConfiguration('projectSession.search');\r\n    const configuredPatterns = config.get<string[]>('excludePatterns') || [];\r\n    \r\n    // Extract directory names from patterns and add common ones\r\n    const ignoredDirs = new Set(['node_modules', '.git', 'dist', 'build', '.next', '.cache']);\r\n    \r\n    // Add any simple directory patterns from config or gitignore\r\n    for (const pattern of configuredPatterns) {\r\n      // Extract directory name from patterns like '**/dir/**' or 'dir/**'\r\n      const match = pattern.match(/(?:\\*\\*\\/)?([\\w.-]+)(?:\\/\\*\\*)?/);\r\n      if (match && match[1]) {\r\n        ignoredDirs.add(match[1]);\r\n      }\r\n    }\r\n    \r\n    // Add patterns from gitignore\r\n    for (const { pattern } of this.patterns) {\r\n      // Get directory name from 'dir/' pattern\r\n      if (pattern.endsWith('/')) {\r\n        const dirName = pattern.slice(0, -1);\r\n        ignoredDirs.add(dirName);\r\n      }\r\n    }\r\n    \r\n    // Convert path separators to forward slashes for consistency\r\n    const normalizedPath = filePath.replace(/\\\\/g, '/');\r\n    \r\n    // Check if path contains any ignored directories\r\n    for (const dir of ignoredDirs) {\r\n      // Match /dir/ pattern to avoid partial matches\r\n      const dirPattern = new RegExp(`\\\\/${dir}\\\\/`, 'i');\r\n      if (dirPattern.test(normalizedPath)) {\r\n        // Also check if it's in a resources/ directory\r\n        if (normalizedPath.includes('/resources/')) {\r\n          console.log(`File ${normalizedPath} is in resources/ directory, should be excluded`);\r\n          return true;\r\n        }\r\n        console.log(`File ${normalizedPath} contains ignored segment: ${dir}`);\r\n        return true;\r\n      }\r\n    }\r\n    \r\n    // Special check for resources/ directory\r\n    if (normalizedPath.includes('/resources/')) {\r\n      console.log(`File ${normalizedPath} is in resources/ directory (special check), should be excluded`);\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n}\r\n\r\n// Singleton instance\r\nlet gitignoreFilter: GitignoreFilter | null = null;\r\n\r\n/**\r\n * Get the gitignore filter instance, initializing it if needed\r\n * @param workspaceFolders The VS Code workspace folders\r\n * @returns The gitignore filter\r\n */\r\nexport async function getGitignoreFilter(workspaceFolders: readonly vscode.WorkspaceFolder[]): Promise<GitignoreFilter> {\r\n  if (!gitignoreFilter) {\r\n    gitignoreFilter = new GitignoreFilter();\r\n    await gitignoreFilter.initialize(workspaceFolders);\r\n  }\r\n  return gitignoreFilter;\r\n}","// Export all commands\nexport * from './getTerminalContent';\nexport * from './contextManagement';\nexport * from './tabManagement';\n","import * as vscode from 'vscode';\r\nimport * as path from 'path';\r\nimport { ProjectSession, ContextFile, ContextFileWithId } from '../models/project-session';\r\nimport { getGitignoreFilter } from '../utils/gitignore-filter';\r\n\r\n// Interface for search results\r\ninterface FileSearchResult {\r\n  fileName: string;\r\n  fullPath: string;\r\n}\r\n\r\n// Interface for file open request\r\ninterface FileOpenRequest {\r\n  path: string;\r\n  startLine: number;\r\n  endLine: number;\r\n}\r\n\r\n// WebView Provider class for the sidebar\r\nexport class ProjectSessionWebviewProvider implements vscode.WebviewViewProvider {\r\n  private _view?: vscode.WebviewView;\r\n  private readonly _extensionUri: vscode.Uri;\r\n  private readonly _session: ProjectSession;\r\n\r\n  constructor(extensionUri: vscode.Uri, session: ProjectSession) {\r\n    this._extensionUri = extensionUri;\r\n    this._session = session;\r\n  }\r\n\r\n  // This is called when the view is first created\r\n  resolveWebviewView(webviewView: vscode.WebviewView, _context: vscode.WebviewViewResolveContext, _token: vscode.CancellationToken) {\r\n    console.log('Webview view resolved');\r\n    this._view = webviewView;\r\n\r\n    try {\r\n      // Set up the webview options\r\n      webviewView.webview.options = {\r\n        enableScripts: true,\r\n        localResourceRoots: [this._extensionUri]\r\n      };\r\n\r\n      // Set initial HTML content\r\n      webviewView.webview.html = this._getHtmlForWebview(webviewView.webview);\r\n\r\n      // Handle messages from the webview\r\n      webviewView.webview.onDidReceiveMessage(message => {\r\n        try {\r\n          console.log('Received message from webview:', message.type);\r\n          switch (message.type) {\r\n            case 'getContextFiles':\r\n              this.sendContextFilesToWebview();\r\n              break;\r\n            case 'clearContext':\r\n              this._clearContext();\r\n              break;\r\n            case 'removeContextFile':\r\n              this._removeContextFile(message.payload);\r\n              break;\r\n            case 'openFile':\r\n              this._openFile(message.payload);\r\n              break;\r\n            case 'searchWorkspaceFiles':\r\n              this._searchWorkspaceFiles(message.payload);\r\n              break;\r\n            case 'addFileToContext':\r\n              this._addFileToContext(message.payload);\r\n              break;\r\n            case 'getTerminalContent':\r\n              this._getTerminalContent();\r\n              break;\r\n            default:\r\n              console.log('Unknown message type:', message.type);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error handling message:', error);\r\n          vscode.window.showErrorMessage(`Error in Project Session Manager: ${error instanceof Error ? error.message : String(error)}`);\r\n        }\r\n      });\r\n\r\n      // Send initial context files with slight delay to ensure webview is ready\r\n      setTimeout(() => {\r\n        this.sendContextFilesToWebview();\r\n      }, 500);\r\n    } catch (error) {\r\n      console.error('Error initializing webview:', error);\r\n      vscode.window.showErrorMessage(`Failed to initialize Project Session Manager: ${error instanceof Error ? error.message : String(error)}`);\r\n    }\r\n  }\r\n\r\n  // Update the webview with the current context files\r\n  public sendContextFilesToWebview() {\r\n    try {\r\n      if (this._view && this._view.webview) {\r\n        const filesWithIds: ContextFileWithId[] = this._session.context_file_lists.map((file, index) => {\r\n          return { ...file, id: index };\r\n        });\r\n        \r\n        console.log(`Sending ${filesWithIds.length} files to webview`);\r\n        \r\n        this._view.webview.postMessage({\r\n          type: 'updateContextFiles',\r\n          payload: filesWithIds\r\n        }).then(() => {\r\n          console.log('Context files message sent successfully');\r\n        }, (err: unknown) => {\r\n          console.error('Failed to send context files to webview:', err);\r\n        });\r\n      } else {\r\n        console.log('Cannot update webview: view is undefined or webview is not ready');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending context files to webview:', error);\r\n      vscode.window.showErrorMessage(`Error updating Project Session Manager: ${error instanceof Error ? error.message : String(error)}`);\r\n    }\r\n  }\r\n\r\n  // Clear all context files\r\n  private _clearContext() {\r\n    this._session.context_file_lists = [];\r\n    vscode.window.showInformationMessage('Context clearedss');\r\n    this.sendContextFilesToWebview();\r\n  }\r\n\r\n  // Remove a specific context file\r\n  private _removeContextFile(index: number) {\r\n    if (index >= 0 && index < this._session.context_file_lists.length) {\r\n      const removed = this._session.context_file_lists.splice(index, 1)[0];\r\n      vscode.window.showInformationMessage(`Removed ${removed.file_name} from context`);\r\n      this.sendContextFilesToWebview();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  private async _getTerminalContent() {\r\n    try {\r\n      // Select & copy terminal content\r\n      await vscode.commands.executeCommand('workbench.action.terminal.selectAll');\r\n      await vscode.commands.executeCommand('workbench.action.terminal.copySelection');\r\n      await vscode.commands.executeCommand('workbench.action.terminal.clearSelection');\r\n  \r\n      // Read from clipboard\r\n      const terminalContent = await vscode.env.clipboard.readText();\r\n      \r\n      // Use the content (e.g., log it, return it, or process it)\r\n      console.log('Terminal content:', terminalContent);\r\n\r\n      vscode.window.showInformationMessage(terminalContent);\r\n      \r\n    } catch (error) {\r\n      console.error('Failed to get terminal content:', error);\r\n      vscode.window.showErrorMessage('Failed to copy terminal content');\r\n    }\r\n\r\n  }\r\n\r\n  // Search workspace files by name/path\r\n  private async _searchWorkspaceFiles(query: string) {\r\n    if (!query || query.trim() === '') {\r\n      if (this._view) {\r\n        this._view.webview.postMessage({\r\n          type: 'fileSearchResults',\r\n          payload: []\r\n        });\r\n      }\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Get all files in workspace folders\r\n      const workspaceFolders = vscode.workspace.workspaceFolders;\r\n      if (!workspaceFolders) {\r\n        return;\r\n      }\r\n\r\n      // Get or initialize the gitignore filter\r\n      const gitignoreFilter = await getGitignoreFilter(workspaceFolders);\r\n\r\n      // Use VS Code's built-in file search\r\n      const results = await vscode.workspace.findFiles('**/*');\r\n      console.log(`Found ${results.length} files before filtering`);\r\n      \r\n      // Filter and limit results\r\n      const filteredResults: FileSearchResult[] = results\r\n        .filter(uri => {\r\n          const fileName = path.basename(uri.fsPath);\r\n          const filePath = uri.fsPath;\r\n\r\n          // First check if file matches search query\r\n          const matchesQuery = fileName.toLowerCase().includes(query.toLowerCase()) || \r\n                          filePath.toLowerCase().includes(query.toLowerCase());\r\n          \r\n          if (!matchesQuery) {\r\n            return false;\r\n          }\r\n\r\n          // Check for resources/ directory explicitly\r\n          if (filePath.includes('resources')) {\r\n            console.log(`Found file in resources directory: ${filePath}`);\r\n            return false;\r\n          }\r\n\r\n          // Then check if file should be excluded based on gitignore\r\n          const shouldExclude = gitignoreFilter.shouldExclude(filePath);\r\n          if (shouldExclude) {\r\n            console.log(`Excluding file based on gitignore: ${filePath}`);\r\n            return false;\r\n          }\r\n\r\n          // Also do a simple check for common ignored directories\r\n          const isInCommonIgnoredDir = gitignoreFilter.containsGitIgnoredSegment(filePath);\r\n          if (isInCommonIgnoredDir) {\r\n            console.log(`Excluding file based on common ignored directory: ${filePath}`);\r\n            return false;\r\n          }\r\n\r\n          return true;\r\n        })\r\n        .slice(0, 10) // Limit to 10 results\r\n        .map(uri => ({\r\n          fileName: path.basename(uri.fsPath),\r\n          fullPath: uri.fsPath\r\n        }));\r\n\r\n      console.log(`Search results for \"${query}\": ${filteredResults.length} files (after gitignore filtering)`);\r\n\r\n      // Send results back to webview\r\n      if (this._view) {\r\n        this._view.webview.postMessage({\r\n          type: 'fileSearchResults',\r\n          payload: filteredResults\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error searching files:', error);\r\n      // Send empty results in case of error\r\n      if (this._view) {\r\n        this._view.webview.postMessage({\r\n          type: 'fileSearchResults',\r\n          payload: []\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  // Add a file to context from path\r\n  private async _addFileToContext(payload: FileSearchResult) {\r\n    try {\r\n      const filePath = payload.fullPath;\r\n      const fileName = path.basename(filePath);\r\n      \r\n      // Check if already in context\r\n      const alreadyExists = this._session.context_file_lists.some(file => \r\n        file.fullPath === filePath && file.fullCode\r\n      );\r\n      \r\n      if (alreadyExists) {\r\n        vscode.window.showInformationMessage(`${fileName} is already in the context`);\r\n        return;\r\n      }\r\n      \r\n      // Read the file content\r\n      const document = await vscode.workspace.openTextDocument(filePath);\r\n      const content = document.getText();\r\n      \r\n      // Add to context\r\n      const contextFile = new ContextFile(\r\n        fileName,\r\n        filePath,\r\n        content,\r\n        0,\r\n        document.lineCount - 1,\r\n        true\r\n      );\r\n      \r\n      this._session.context_file_lists.push(contextFile);\r\n      vscode.window.showInformationMessage(`Added ${fileName} to context`);\r\n      \r\n      // Update the webview\r\n      this.sendContextFilesToWebview();\r\n    } catch (error) {\r\n      console.error('Error adding file to context:', error);\r\n      vscode.window.showErrorMessage(`Error adding file to context: ${error instanceof Error ? error.message : String(error)}`);\r\n    }\r\n  }\r\n\r\n  // Open a file at specific lines\r\n  private _openFile(payload: FileOpenRequest) {\r\n    const filePath = payload.path;\r\n    const startLine = payload.startLine;\r\n    const endLine = payload.endLine;\r\n    \r\n    vscode.workspace.openTextDocument(filePath).then(document => {\r\n      vscode.window.showTextDocument(document).then(editor => {\r\n        const range = new vscode.Range(\r\n          new vscode.Position(startLine, 0),\r\n          new vscode.Position(endLine, 0)\r\n        );\r\n        editor.selection = new vscode.Selection(range.start, range.end);\r\n        editor.revealRange(range);\r\n      });\r\n    });\r\n  }\r\n\r\n  // Create HTML content for the webview\r\n  private _getHtmlForWebview(webview: vscode.Webview): string {\r\n    const scriptUri = webview.asWebviewUri(vscode.Uri.joinPath(this._extensionUri, 'webview', 'dist', 'bundle.js'));\r\n    \r\n    return `<!DOCTYPE html>\r\n    <html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n        <title>Project Session Manager</title>\r\n        <style>\r\n            body {\r\n                padding: 0;\r\n                margin: 0;\r\n                color: var(--vscode-foreground);\r\n                font-family: var(--vscode-font-family);\r\n                background-color: var(--vscode-editor-background);\r\n                font-size: var(--vscode-font-size);\r\n            }\r\n            \r\n            button {\r\n                background-color: var(--vscode-button-background);\r\n                color: var(--vscode-button-foreground);\r\n                border: none;\r\n                padding: 4px 8px;\r\n                cursor: pointer;\r\n                border-radius: 2px;\r\n                font-family: var(--vscode-font-family);\r\n                font-size: var(--vscode-font-size);\r\n            }\r\n            \r\n            button:hover {\r\n                background-color: var(--vscode-button-hoverBackground);\r\n            }\r\n            \r\n            input {\r\n                background-color: var(--vscode-input-background);\r\n                color: var(--vscode-input-foreground);\r\n                border: 1px solid var(--vscode-input-border);\r\n                padding: 4px 8px;\r\n                font-family: var(--vscode-font-family);\r\n                font-size: var(--vscode-font-size);\r\n                width: 100%;\r\n                box-sizing: border-box;\r\n            }\r\n            \r\n            .context-file {\r\n                padding: 8px;\r\n                border-bottom: 1px solid var(--vscode-panel-border);\r\n                cursor: pointer;\r\n            }\r\n            \r\n            .context-file:hover {\r\n                background-color: var(--vscode-list-hoverBackground);\r\n            }\r\n            \r\n            .context-file-header {\r\n                display: flex;\r\n                justify-content: space-between;\r\n                align-items: center;\r\n                font-size: var(--vscode-font-size);\r\n            }\r\n            \r\n            .context-file-content {\r\n                max-height: 150px;\r\n                overflow: auto;\r\n                margin-top: 8px;\r\n                font-family: var(--vscode-editor-font-family);\r\n                font-size: var(--vscode-editor-font-size);\r\n                background-color: var(--vscode-editor-background);\r\n                padding: 4px;\r\n                border-radius: 2px;\r\n                white-space: pre;\r\n            }\r\n            \r\n            .empty-state {\r\n                display: flex;\r\n                flex-direction: column;\r\n                align-items: center;\r\n                text-align: center;\r\n                padding: 20px 12px;\r\n                background-color: var(--vscode-editor-background);\r\n                border-radius: 4px;\r\n                margin: 10px;\r\n            }\r\n            \r\n            .context-files-container {\r\n                flex: 1;\r\n                overflow: auto;\r\n            }\r\n            \r\n            .toolbar {\r\n                display: flex;\r\n                justify-content: space-between;\r\n                align-items: center;\r\n                padding: 4px 8px;\r\n                background-color: var(--vscode-sideBar-background);\r\n                border-bottom: 1px solid var(--vscode-panel-border);\r\n                position: sticky;\r\n                top: 0;\r\n            }\r\n            \r\n            .file-title {\r\n                overflow: hidden;\r\n                text-overflow: ellipsis;\r\n                white-space: nowrap;\r\n                flex: 1;\r\n                margin-right: 4px;\r\n            }\r\n            \r\n            .file-actions {\r\n                display: flex;\r\n                gap: 4px;\r\n            }\r\n            \r\n            .search-container {\r\n                padding: 4px 8px;\r\n                border-bottom: 1px solid var(--vscode-panel-border);\r\n                position: relative;\r\n            }\r\n            \r\n            .file-search-container {\r\n                position: relative;\r\n                width: 100%;\r\n            }\r\n            \r\n            .file-search-dropdown {\r\n                position: absolute;\r\n                top: 100%;\r\n                left: 0;\r\n                right: 0;\r\n                z-index: 1000;\r\n                background-color: var(--vscode-dropdown-background);\r\n                border: 1px solid var(--vscode-dropdown-border);\r\n                max-height: 200px;\r\n                overflow-y: auto;\r\n                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\r\n            }\r\n            \r\n            .file-search-item {\r\n                padding: 6px 8px;\r\n                cursor: pointer;\r\n                border-bottom: 1px solid var(--vscode-panel-border);\r\n            }\r\n            \r\n            .file-search-item:hover {\r\n                background-color: var(--vscode-list-hoverBackground);\r\n            }\r\n            \r\n            .file-search-item.selected {\r\n                background-color: var(--vscode-list-activeSelectionBackground);\r\n                color: var(--vscode-list-activeSelectionForeground);\r\n            }\r\n            \r\n            .file-name {\r\n                font-weight: bold;\r\n                margin-bottom: 2px;\r\n            }\r\n            \r\n            .file-path {\r\n                font-size: 90%;\r\n                color: var(--vscode-descriptionForeground);\r\n                white-space: nowrap;\r\n                overflow: hidden;\r\n                text-overflow: ellipsis;\r\n            }\r\n            \r\n            .search-loading {\r\n                padding: 8px;\r\n                text-align: center;\r\n                color: var(--vscode-descriptionForeground);\r\n            }\r\n        </style>\r\n    </head>\r\n    <body>\r\n        <div id=\"root\"></div>\r\n        <script src=\"${scriptUri}\"></script>\r\n    </body>\r\n    </html>`;\r\n  }\r\n}","import * as vscode from 'vscode';\nimport { ProjectSession } from './models/project-session';\nimport { ProjectSessionWebviewProvider } from './webview/webview-provider';\nimport { \n  getTerminalContent,\n  addFileToContext,\n  addSelectionToContext,\n  removeContextFile,\n  clearContext,\n  updateOpenTabs,\n  updateCurrentTab\n} from './commands';\n\n// Global instances\nlet session = new ProjectSession();\nlet webviewProvider: ProjectSessionWebviewProvider | null = null; // Store a reference to the webview provider\n\n// Extension activation\nexport function activate(context: vscode.ExtensionContext) {\n  console.log('Project Session Manager is now active');\n\n  // Create the webview provider\n  webviewProvider = new ProjectSessionWebviewProvider(context.extensionUri, session);\n  \n  // Register the WebviewView provider for the sidebar\n  context.subscriptions.push(\n    vscode.window.registerWebviewViewProvider('projectSessionExplorer', webviewProvider)\n  );\n\n  // Register commands for keyboard shortcuts\n  let getTerminalContentCmd = vscode.commands.registerCommand(\n    'projectSession.getTerminalContent', \n    () => getTerminalContent()\n  );\n\n  let addFileToContextCmd = vscode.commands.registerCommand(\n    'projectSession.addFileToContext', \n    () => addFileToContext(session, context, webviewProvider)\n  );\n  \n  let addSelectionToContextCmd = vscode.commands.registerCommand(\n    'projectSession.addSelectionToContext', \n    () => addSelectionToContext(session, context, webviewProvider)\n  );\n  \n  let clearContextCmd = vscode.commands.registerCommand(\n    'projectSession.clearContext', \n    () => clearContext(session, webviewProvider)\n  );\n  \n  // Add command to remove a specific context file\n  context.subscriptions.push(\n    vscode.commands.registerCommand(\n      'projectSession.removeContextFile', \n      (id: string) => removeContextFile(session, parseInt(id), webviewProvider)\n    )\n  );\n\n  // Update tabs when they change\n  context.subscriptions.push(\n    vscode.window.onDidChangeActiveTextEditor(\n      (editor) => updateCurrentTab(session, editor)\n    )\n  );\n  \n  context.subscriptions.push(\n    vscode.workspace.onDidOpenTextDocument(\n      (doc) => updateOpenTabs(session, doc)\n    )\n  );\n  \n  context.subscriptions.push(\n    vscode.workspace.onDidCloseTextDocument(\n      (doc) => updateOpenTabs(session, doc)\n    )\n  );\n\n  // Initial update of tabs\n  updateOpenTabs(session);\n  updateCurrentTab(session, vscode.window.activeTextEditor);\n\n  // Add disposables to context\n  context.subscriptions.push(addFileToContextCmd);\n  context.subscriptions.push(addSelectionToContextCmd);\n  context.subscriptions.push(clearContextCmd);\n  context.subscriptions.push(getTerminalContentCmd);\n}\n\n// Deactivation function\nexport function deactivate() {\n  // Save session data if needed\n  console.log('Project Session Manager deactivated');\n}\n","module.exports = require(\"vscode\");","import * as vscode from 'vscode';\nimport { ProjectSession, ContextFile } from '../models/project-session';\nimport { ProjectSessionWebviewProvider } from '../webview/webview-provider';\n\n// Check if a file already exists in the context\nexport function isFileInContext(session: ProjectSession, fullPath: string, startLine: number, endLine: number, isFullCode: boolean): boolean {\n  return session.context_file_lists.some(contextFile => {\n    // For full code files, just check the path\n    if (isFullCode && contextFile.fullCode) {\n      return contextFile.fullPath === fullPath;\n    }\n    \n    // For selections, check for overlapping ranges in the same file\n    if (!isFullCode && contextFile.fullPath === fullPath) {\n      // Check if the ranges overlap\n      return (\n        (startLine <= contextFile.end_line && endLine >= contextFile.start_line) ||\n        (contextFile.start_line <= endLine && contextFile.end_line >= startLine)\n      );\n    }\n    \n    return false;\n  });\n}\n\n// Add current file to context\nexport async function addFileToContext(session: ProjectSession, _: vscode.ExtensionContext, webviewProvider: ProjectSessionWebviewProvider | null) {\n  const editor = vscode.window.activeTextEditor;\n  if (!editor) {\n    vscode.window.showInformationMessage('No file is currently open');\n    return;\n  }\n\n  const document = editor.document;\n  const fileName = document.fileName.split(/[/\\\\]/).pop() || '';\n  const fullPath = document.fileName;\n  const content = document.getText();\n\n  console.log(`Adding file to context: ${fileName}`);\n\n  // Check if this file is already in the context\n  if (isFileInContext(session, fullPath, 0, document.lineCount - 1, true)) {\n    vscode.window.showWarningMessage(`${fileName} is already in the context`);\n    return;\n  }\n\n  const contextFile = new ContextFile(\n    fileName,\n    fullPath,\n    content,\n    0,\n    document.lineCount - 1,\n    true\n  );\n\n  session.context_file_lists.push(contextFile);\n  vscode.window.showInformationMessage(`Added ${fileName} to context`);\n  \n  console.log(`Current context files: ${session.context_file_lists.length}`);\n  \n  // Notify the webview to update\n  updateWebView(webviewProvider);\n}\n\n// Add selected text to context\nexport async function addSelectionToContext(session: ProjectSession, _: vscode.ExtensionContext, webviewProvider: ProjectSessionWebviewProvider | null) {\n  const editor = vscode.window.activeTextEditor;\n  if (!editor) {\n    vscode.window.showInformationMessage('No file is currently open');\n    return;\n  }\n\n  const selection = editor.selection;\n  if (selection.isEmpty) {\n    vscode.window.showInformationMessage('No text selected');\n    return;\n  }\n\n  const document = editor.document;\n  const fileName = document.fileName.split(/[/\\\\]/).pop() || '';\n  const fullPath = document.fileName;\n  const content = document.getText(selection);\n  const startLine = selection.start.line;\n  const endLine = selection.end.line;\n\n  // Check if this selection is already in the context\n  if (isFileInContext(session, fullPath, startLine, endLine, false)) {\n    vscode.window.showWarningMessage(`This selection from ${fileName} is already in the context`);\n    return;\n  }\n\n  const contextFile = new ContextFile(\n    fileName,\n    fullPath,\n    content,\n    startLine,\n    endLine,\n    false\n  );\n\n  session.context_file_lists.push(contextFile);\n  vscode.window.showInformationMessage(`Added selection from ${fileName} to context`);\n  \n  // Notify the webview to update\n  updateWebView(webviewProvider);\n}\n\n// Remove a specific context file by index\nexport function removeContextFile(session: ProjectSession, index: number, webviewProvider: ProjectSessionWebviewProvider | null) {\n  if (index >= 0 && index < session.context_file_lists.length) {\n    const removed = session.context_file_lists.splice(index, 1)[0];\n    vscode.window.showInformationMessage(`Removed ${removed.file_name} from context`);\n    \n    // Notify the webview to update\n    updateWebView(webviewProvider);\n  }\n}\n\n// Clear all context files\nexport function clearContext(session: ProjectSession, webviewProvider: ProjectSessionWebviewProvider | null) {\n  session.context_file_lists = [];\n  vscode.window.showInformationMessage('Context cleared');\n  \n  // Notify the webview to update\n  updateWebView(webviewProvider);\n}\n\n// Helper function to update the WebView\nexport function updateWebView(webviewProvider: ProjectSessionWebviewProvider | null) {\n  console.log('Updating webview...');\n  if (webviewProvider) {\n    console.log('Provider found, sending update');\n    webviewProvider.sendContextFilesToWebview();\n  } else {\n    console.log('No provider found! Cannot update webview.');\n  }\n}\n","// Data model for the session\r\nexport class ProjectSession {\r\n  // List of context files\r\n  public context_file_lists: ContextFile[];\r\n  // List of currently open tabs\r\n  public opening_tabs: string[];\r\n  // Current active tab\r\n  public curTab: string | null;\r\n\r\n  constructor() {\r\n    this.opening_tabs = [];\r\n    this.curTab = null;\r\n    this.context_file_lists = [];\r\n  }\r\n}\r\n\r\n// Class to represent a context file as requested\r\nexport class ContextFile {\r\n  // File name (without path)\r\n  public file_name: string;\r\n  // Full file path\r\n  public fullPath: string;\r\n  // File content or selection content\r\n  public content: string;\r\n  // Start line of selection (0 for full file)\r\n  public start_line: number;\r\n  // End line of selection (last line for full file)\r\n  public end_line: number;\r\n  // Whether this is the full file content\r\n  public fullCode: boolean;\r\n\r\n  constructor(\r\n    file_name: string, \r\n    fullPath: string, \r\n    content: string, \r\n    start_line: number, \r\n    end_line: number, \r\n    fullCode: boolean\r\n  ) {\r\n    this.file_name = file_name;\r\n    this.fullPath = fullPath;\r\n    this.content = content;\r\n    this.start_line = start_line;\r\n    this.end_line = end_line;\r\n    this.fullCode = fullCode;\r\n  }\r\n}\r\n\r\n// Interface for context file with ID for UI display\r\nexport interface ContextFileWithId extends ContextFile {\r\n  id: number;\r\n}","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n","import * as vscode from 'vscode';\nimport { ProjectSession } from '../models/project-session';\n\n// Update the list of open tabs\nexport function updateOpenTabs(session: ProjectSession, _?: vscode.TextDocument) {\n  session.opening_tabs = vscode.workspace.textDocuments\n    .filter(doc => !doc.isUntitled)\n    .map(doc => doc.fileName.split(/[/\\\\]/).pop() || '');\n}\n\n// Update the current active tab\nexport function updateCurrentTab(session: ProjectSession, editor: vscode.TextEditor | undefined) {\n  if (editor) {\n    session.curTab = editor.document.fileName.split(/[/\\\\]/).pop() || '';\n  } else {\n    session.curTab = null;\n  }\n}\n","module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","import * as vscode from 'vscode';\n\nexport async function getTerminalContent(): Promise<string | undefined> {\n  try {\n    // Select & copy terminal content\n    await vscode.commands.executeCommand('workbench.action.terminal.selectAll');\n    await vscode.commands.executeCommand('workbench.action.terminal.copySelection');\n    await vscode.commands.executeCommand('workbench.action.terminal.clearSelection');\n\n    // Read from clipboard\n    const terminalContent = await vscode.env.clipboard.readText();\n    \n    // Show the content in an information message\n    console.log('Terminal content:', terminalContent);\n    vscode.window.showInformationMessage(\"Terminal content: \"+terminalContent);\n    \n    return terminalContent;\n  } catch (error) {\n    console.error('Failed to get terminal content:', error);\n    vscode.window.showErrorMessage('Failed to copy terminal content');\n    return undefined;\n  }\n}\n","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["module","exports","minimatch","Minimatch","path","e","sep","GLOBSTAR","expand","plTypes","open","close","qmark","star","reSpecials","split","reduce","set","c","slashSplit","ext","a","b","t","Object","keys","forEach","k","p","pattern","options","assertValidPattern","nocomment","charAt","match","this","trim","allowWindowsEscape","join","regexp","negate","comment","empty","partial","make","braceExpand","nobrace","test","filter","i","list","defaults","def","length","orig","m","makeRe","prototype","debug","parseNegate","globSet","console","error","apply","arguments","globParts","map","s","si","parse","indexOf","negateOffset","nonegate","l","substr","TypeError","isSub","noglobstar","stateChar","re","hasMagic","nocase","escaping","patternListStack","negativeLists","inClass","reClassStart","classStart","patternStart","dot","self","clearStateChar","len","noext","push","type","start","reStart","pl","pop","reEnd","cs","substring","RegExp","er","sp","SUBPARSE","tail","slice","replace","_","$1","$2","addPatternStart","n","nl","nlBefore","nlFirst","nlLast","nlAfter","openParensBefore","cleanAfter","dollar","flags","regExp","_glob","_src","twoStar","ex","mm","f","nonull","filename","file","matchBase","matchOne","flipNegate","fi","pi","fl","hit","fr","pr","swallowee","Error","async","workspaceFolders","gitignoreFilter","GitignoreFilter","initialize","constructor","patterns","extraExcludePatterns","vscode","workspace","getConfiguration","get","basePath","folder","_loadGitignorePatterns","uri","fsPath","log","folderPath","gitignorePath","gitignoreExists","fs","promises","access","constants","R_OK","err","lines","readFile","line","startsWith","shouldExclude","filePath","workspaceFolder","relativePath","relative","endsWith","dirPath","includes","patternToCheck","isNegated","isDirectoryPattern","matches","filterUris","uris","containsGitIgnoredSegment","configuredPatterns","ignoredDirs","Set","add","dirName","normalizedPath","dir","extensionUri","session","_extensionUri","_session","resolveWebviewView","webviewView","_context","_token","_view","webview","enableScripts","localResourceRoots","html","_getHtmlForWebview","onDidReceiveMessage","message","sendContextFilesToWebview","_clearContext","_removeContextFile","payload","_openFile","_searchWorkspaceFiles","_addFileToContext","_getTerminalContent","window","showErrorMessage","String","setTimeout","filesWithIds","context_file_lists","index","id","postMessage","then","showInformationMessage","removed","splice","file_name","commands","executeCommand","terminalContent","env","clipboard","readText","query","getGitignoreFilter","results","findFiles","filteredResults","fileName","basename","toLowerCase","fullPath","some","fullCode","document","openTextDocument","content","getText","contextFile","ContextFile","lineCount","startLine","endLine","showTextDocument","editor","range","Range","Position","selection","Selection","end","revealRange","asWebviewUri","Uri","joinPath","context","webviewProvider","ProjectSessionWebviewProvider","subscriptions","registerWebviewViewProvider","getTerminalContentCmd","registerCommand","getTerminalContent","addFileToContextCmd","addFileToContext","addSelectionToContextCmd","addSelectionToContext","clearContextCmd","clearContext","removeContextFile","parseInt","onDidChangeActiveTextEditor","updateCurrentTab","onDidOpenTextDocument","doc","updateOpenTabs","onDidCloseTextDocument","activeTextEditor","ProjectSession","require","isFileInContext","showWarningMessage","updateWebView","isEmpty","isFullCode","end_line","start_line","opening_tabs","curTab","balanced","str","maybeMatch","r","pre","body","post","reg","begs","beg","left","right","result","ai","bi","concatMap","escSlash","escOpen","escClose","escComma","escPeriod","escapeBraces","unescapeBraces","Math","random","numeric","charCodeAt","parseCommaParts","parts","postParts","shift","embrace","isPadded","el","lte","y","gte","isTop","expansions","isNumericSequence","isAlphaSequence","isSequence","isOptions","N","x","width","max","incr","abs","pad","fromCharCode","need","z","Array","j","expansion","textDocuments","isUntitled","xs","fn","res","isArray","toString","call","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}